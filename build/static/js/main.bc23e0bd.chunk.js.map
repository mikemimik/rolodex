{"version":3,"sources":["services/tokenService.js","components/Tabs.js","components/Header.js","components/Page.js","components/cohort/CreateCohort.js","components/cohort/EditCohort.js","components/cohort/Cohorts.js","components/cohort/Cohort.js","components/student/EditStudent.js","components/student/Student.js","components/Login.js","components/App.js","index.js"],"names":["setToken","token","localStorage","setItem","getToken","getItem","Tabs","cohorts","view","component","Tab","key","label","value","icon","pathname","create","AddCircle","edit","Edit","cohortId","students","Person","studentId","projects","listTabs","paths","map","path","get","handleTabChange","event","appState","this","props","history","params","match","push","state","Header","currentView","tabs","AppBar","position","color","onChange","call","indicatorColor","textColor","centered","PureComponent","Page","renderItemGrid","items","classes","Grid","container","className","grid","item","xs","justify","spacing","child","index","title","children","root","Paper","page","Typography","variant","header","withStyles","theme","paddingTop","unit","mixins","gutters","paddingBottom","flexGrow","CohortTypes","CreateCohort","nextCohort","cohort","program","year","submit","a","fetch","method","body","JSON","stringify","headers","console","error","handleInputChange","prop","target","id","groupEnd","currentCohort","setState","Object","assign","renderHeader","TextField","fullWidth","textField","helperText","select","SelectProps","MenuProps","menu","margin","option","MenuItem","Button","onClick","display","flexWrap","marginLeft","marginRight","width","EditCohort","_id","response","json","log","onFetchCohorts","data","Cohorts","handleClickCohort","handleFetchCohorts","group","List","ListItem","button","ListItemAvatar","Avatar","Bookmark","ListItemText","disableTypography","primary","secondary","Fragment","inline","ListItemSecondaryAction","Badge","badgeContent","length","Cohort","handleClickStudent","handleFetchStudents","responseData","onFetchStudents","cohortsById","student","firstName","lastName","Folder","EditStudent","currentStudent","nextStudent","Student","studentsById","Login","email","password","loginResponse","ok","status","statusText","tokenData","fetchUser","message","handleClose","debounceChange","debounce","main","paper","Snackbar","anchorOrigin","vertical","horizontal","open","keys","onClose","ContentProps","autoHideDuration","SnackbarContent","snackError","aria-describedby","snackMessage","Error","snackIcon","action","IconButton","aria-label","Close","avatar","LockOutlined","form","FormControl","required","InputLabel","htmlFor","Input","autoFocus","name","type","autoComplete","FormControlLabel","control","Checkbox","breakpoints","up","marginTop","flexDirection","alignItems","padding","backgroundColor","palette","dark","fontSize","opacity","App","user","studentsByCohortId","reduce","acc","currentCohorts","nextCohorts","uniqBy","currentCohortsById","nextCohortsById","currentStudents","nextStudents","currentStudentsById","nextStudentsById","exact","render","renderProps","to","cohortStudents","Component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.bc23e0bd.chunk.js","sourcesContent":["\nexport const setToken = (token) => {\n  localStorage.setItem('token', token);\n};\n\nexport const getToken = () => {\n  return localStorage.getItem('token');\n};\nexport const removeToken = () => {\n  localStorage.removeItem('token');\n};\n","import React from 'react';\nimport { get } from 'lodash';\n\nimport { Tab } from '@material-ui/core';\nimport {\n  ChromeReaderMode as ReaderIcon,\n  AddCircle as AddCircleIcon,\n  Person as PersonIcon,\n  Edit as EditIcon,\n} from '@material-ui/icons';\n\nexport const Tabs = {\n  cohorts: {\n    view: {\n      component: <Tab key='cohorts.view' label='View Cohorts' value='cohorts.view' icon={<ReaderIcon />} />,\n      pathname: () => '/cohorts',\n    },\n    create: {\n      component: <Tab key='cohorts.create' label='Add Cohort' value='cohorts.create' icon={<AddCircleIcon />} />,\n      pathname: () => '/cohorts/create',\n    },\n    edit: {\n      component: <Tab key='cohorts.edit' label='Edit Cohort' value='cohorts.edit' icon={<EditIcon />} />,\n      pathname: ({ cohortId }) => `/cohorts/${cohortId}/edit`,\n    },\n  },\n  students: {\n    view: {\n      component: <Tab key='students.view' label='View Students' value='students.view' icon={<PersonIcon />} />,\n      pathname: ({ cohortId }) => `/cohorts/${cohortId}`,\n    },\n    create: {\n      component: <Tab key='students.create' label='Add Student' value='students.create' icon={<AddCircleIcon />} />,\n      pathname: () => '/students/create',\n    },\n    edit: {\n      component: <Tab key='students.edit' label='Edit Student' value='students.edit' icon={<EditIcon />} />,\n      pathname: ({ cohortId, studentId }) => `/cohorts/${cohortId}/students/${studentId}/edit`,\n    },\n  },\n  projects: {\n    create: {\n      component: <Tab key='project.create' label='Add Project' value='projects.create' icon={<AddCircleIcon />} />,\n      pathname: () => '/projects/create',\n    },\n  },\n};\n\nexport function listTabs (paths) {\n  return paths.map((path) => {\n    return get(Tabs, `${path}.component`);\n  });\n}\n\nexport function handleTabChange (event, value, appState) {\n  const { history, match: { params } } = this.props;\n  const pathname = get(Tabs, `${value}.pathname`)(params);\n  return history.push({ pathname, state: appState });\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  AppBar,\n  Tabs,\n} from '@material-ui/core';\n\nclass Header extends PureComponent {\n  render () {\n    const {\n      currentView,\n      tabs,\n      handleTabChange,\n      appState,\n    } = this.props;\n\n    return (\n      <AppBar position='static' color='default'>\n        <Tabs\n          value={currentView}\n          onChange={(event, value) => {\n            handleTabChange.call(this, event, value, appState);\n          }}\n          indicatorColor='primary'\n          textColor='primary'\n          centered\n        >\n          {tabs}\n        </Tabs>\n      </AppBar>\n    );\n  }\n}\n\nHeader.propTypes = {\n  currentView: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.bool,\n  ]),\n  tabs: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n  handleTabChange: PropTypes.func,\n  appState: PropTypes.object,\n};\n\nexport default Header;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  Grid,\n  Paper,\n  Typography,\n} from '@material-ui/core';\n\nconst styles = (theme) => ({\n  root: {\n    paddingTop: theme.spacing.unit * 2,\n  },\n  page: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing.unit * 2,\n    paddingBottom: theme.spacing.unit * 2,\n  },\n  grid: {\n    flexGrow: 1,\n  },\n});\n\nclass Page extends PureComponent {\n  renderItemGrid = (items) => {\n    const { classes } = this.props;\n    return (\n      <Grid container className={classes.grid}>\n        <Grid item xs={12}>\n          <Grid container justify='center' spacing={16}>\n            {\n              items.map((child, index) => (\n                <Grid key={index} item>\n                  {child}\n                </Grid>\n              ))\n            }\n          </Grid>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  render () {\n    const {\n      items,\n      title,\n      classes,\n      children,\n    } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.page}>\n          <Typography variant='h6' className={classes.header}>\n            {title}\n          </Typography>\n          { items && this.renderItemGrid(items) }\n          { children }\n        </Paper>\n      </div>\n    );\n  }\n}\n\nPage.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.element),\n  title: PropTypes.string,\n  classes: PropTypes.object,\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.arrayOf(PropTypes.element),\n  ]),\n};\n\nexport default withStyles(styles)(Page);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  Button,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\n\nimport { listTabs, handleTabChange } from '../Tabs';\nimport { getToken } from '../../services/tokenService';\nimport Header from '../Header';\nimport Page from '../Page';\n\nconst styles = (theme) => ({\n  root: {},\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  menu: {\n    width: 200,\n  },\n});\nexport const CohortTypes = [\n  'spring',\n  'summer',\n  'fall',\n  'winter',\n];\n\nclass CreateCohort extends PureComponent {\n  state = {\n    nextCohort: {\n      cohort: null,\n      program: '',\n      year: null,\n    },\n  };\n\n  submit = async () => {\n    try {\n      const { history } = this.props;\n      const { nextCohort } = this.state;\n      const token = getToken();\n      await fetch('/api/cohorts', {\n        method: 'POST',\n        body: JSON.stringify(nextCohort),\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      return history.push({ pathname: '/cohorts' });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  handleInputChange = (prop) => ({ target: { id, value } }) => {\n    console.groupEnd();\n    const currentCohort = this.state.nextCohort;\n    const nextCohort = { [prop]: value };\n    this.setState({\n      nextCohort: Object.assign({}, currentCohort, nextCohort),\n    });\n  };\n\n  renderHeader = (props) => (\n    <Header\n      currentView={'cohorts.create'}\n      handleTabChange={handleTabChange}\n      tabs={listTabs([\n        'cohorts.view',\n        'cohorts.create',\n      ])}\n      {...props}\n    />\n  )\n\n  render () {\n    const { classes } = this.props;\n    return (\n      <>\n        {this.renderHeader(this.props)}\n        <Page title='Create Cohort'>\n          <form className={classes.container}>\n            <TextField\n              fullWidth\n              id='program'\n              label='Program Name'\n              className={classes.textField}\n              value={this.state.nextCohort.program}\n              onChange={this.handleInputChange('program')}\n              helperText='Please enter program name'\n            />\n            <TextField\n              fullWidth\n              id='year'\n              label='Cohort Year'\n              className={classes.textField}\n              value={this.state.nextCohort.year}\n              onChange={this.handleInputChange('year')}\n              helperText='Please enter cohort year'\n            />\n            <TextField\n              select\n              fullWidth\n              id='cohort'\n              label='Cohort Type'\n              className={classes.textField}\n              value={this.state.nextCohort.cohort || CohortTypes[0]}\n              onChange={this.handleInputChange('cohort')}\n              SelectProps={{\n                MenuProps: {\n                  className: classes.menu,\n                },\n              }}\n              helperText='Please select a cohort'\n              margin='normal'\n            >\n              {CohortTypes.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={this.submit}\n            >\n              Create Cohort\n            </Button>\n          </form>\n        </Page>\n      </>\n    );\n  }\n}\n\nCreateCohort.propTypes = {\n  classes: PropTypes.object,\n  history: PropTypes.object,\n};\nexport default withStyles(styles)(CreateCohort);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { get } from 'lodash';\n\nimport {\n  Button,\n  MenuItem,\n  TextField,\n} from '@material-ui/core';\n\nimport { listTabs, handleTabChange } from '../Tabs';\nimport { getToken } from '../../services/tokenService';\nimport Header from '../Header';\nimport Page from '../Page';\n\nconst styles = (theme) => ({\n  root: {},\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  menu: {\n    width: 200,\n  },\n});\nexport const CohortTypes = [\n  'spring',\n  'summer',\n  'fall',\n  'winter',\n];\n\nclass EditCohort extends PureComponent {\n  constructor (props) {\n    super(props);\n    const cohort = get(props, 'location.state.cohort', {\n      cohort: null,\n      program: '',\n      year: null,\n    });\n\n    this.state = {\n      cohort,\n    };\n  }\n\n  submit = async () => {\n    try {\n      const { history } = this.props;\n      const { cohort } = this.state;\n      const token = getToken();\n      const response = await fetch(`/api/cohorts/${cohort._id}`, {\n        method: 'PUT',\n        body: JSON.stringify(cohort),\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      const cohorts = await response.json();\n      console.log('cohorts:', cohorts);\n      await this.props.onFetchCohorts(cohorts.data);\n      return history.push({ pathname: '/cohorts' });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  handleInputChange = (prop) => ({ target: { id, value } }) => {\n    const currentCohort = this.state.cohort;\n    const nextCohort = { [prop]: value };\n    this.setState({\n      cohort: Object.assign({}, currentCohort, nextCohort),\n    });\n  };\n\n  renderHeader = (props) => (\n    <Header\n      currentView={false}\n      handleTabChange={handleTabChange}\n      tabs={listTabs([\n        'cohorts.view',\n      ])}\n      {...props}\n    />\n  )\n\n  render () {\n    const { classes } = this.props;\n    return (\n      <>\n        {this.renderHeader(this.props)}\n        <Page title='Edit Cohort'>\n          <form className={classes.container}>\n            <TextField\n              fullWidth\n              id='program'\n              label='Program Name'\n              className={classes.textField}\n              value={this.state.cohort.program}\n              onChange={this.handleInputChange('program')}\n              helperText='Please enter program name'\n            />\n            <TextField\n              fullWidth\n              id='year'\n              label='Cohort Year'\n              className={classes.textField}\n              value={this.state.cohort.year}\n              onChange={this.handleInputChange('year')}\n              helperText='Please enter cohort year'\n            />\n            <TextField\n              select\n              fullWidth\n              id='cohort'\n              label='Cohort Type'\n              className={classes.textField}\n              value={this.state.cohort.cohort || CohortTypes[0]}\n              onChange={this.handleInputChange('cohort')}\n              SelectProps={{\n                MenuProps: {\n                  className: classes.menu,\n                },\n              }}\n              helperText='Please select a cohort'\n              margin='normal'\n            >\n              {CohortTypes.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={this.submit}\n            >\n              Edit Cohort\n            </Button>\n          </form>\n        </Page>\n      </>\n    );\n  }\n}\n\nEditCohort.propTypes = {\n  classes: PropTypes.object,\n  history: PropTypes.object,\n  onFetchCohorts: PropTypes.func,\n};\n\nexport default withStyles(styles)(EditCohort);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  Badge,\n  Typography,\n} from '@material-ui/core';\nimport {\n  Bookmark as BookmarkIcon,\n  Person as PersonIcon,\n} from '@material-ui/icons';\n\nimport { listTabs, handleTabChange } from '../Tabs';\nimport Header from '../Header';\nimport Page from '../Page';\n\nimport { getToken } from '../../services/tokenService';\n\nconst styles = (theme) => ({\n  root: {},\n  margin: {\n    margin: theme.spacing.unit * 2,\n  },\n  inline: {\n    display: 'inline',\n  },\n});\n\nclass Cohorts extends PureComponent {\n  handleClickCohort = (id) => {\n    const { history } = this.props;\n    return history.push({ pathname: `/cohorts/${id}` });\n  }\n\n  handleFetchCohorts = async () => {\n    try {\n      const token = getToken();\n      const response = await fetch('/api/cohorts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      const cohorts = await response.json();\n      this.props.onFetchCohorts(cohorts.data);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n  renderHeader = (props) => (\n    <Header\n      currentView={false}\n      handleTabChange={handleTabChange}\n      tabs={listTabs([\n        'cohorts.create',\n      ])}\n      {...props}\n    />\n  )\n\n  componentDidMount () {\n    console.group('Cohorts::componentDidMount');\n    this.handleFetchCohorts();\n    console.groupEnd();\n  }\n\n  componentWillUnmount () {\n    console.group('Cohorts::componentWillUnmount');\n    console.groupEnd();\n  }\n\n  render () {\n    const { classes, cohorts } = this.props;\n    return (\n      <>\n        {this.renderHeader(this.props)}\n        <Page title='Cohorts'>\n          <List>\n            {\n              cohorts.map((cohort) => {\n                return (\n                  <ListItem\n                    button\n                    key={`${cohort.year}-${cohort.cohort}-${cohort.program}`}\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <BookmarkIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      disableTypography\n                      primary={\n                        <Typography variant='h4'>\n                          {`${cohort.program}`}\n                        </Typography>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography component='span' className={classes.inline}>\n                            {`${cohort.year}`}\n                          </Typography>\n                          {` - ${cohort.cohort}`}\n                        </React.Fragment>\n                      }\n                      onClick={(event) => {\n                        this.handleClickCohort(cohort._id);\n                      }}\n                    />\n                    <ListItemSecondaryAction>\n                      <Badge\n                        className={classes.margin}\n                        badgeContent={cohort.students.length}\n                        color='secondary'\n                      >\n                        <PersonIcon />\n                      </Badge>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })\n            }\n          </List>\n        </Page>\n      </>\n    );\n  }\n}\n\nCohorts.propTypes = {\n  classes: PropTypes.object,\n  cohorts: PropTypes.arrayOf(PropTypes.object),\n  cohortsById: PropTypes.object,\n  onFetchCohorts: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default withStyles(styles)(Cohorts);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { get } from 'lodash';\n\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  ListItemSecondaryAction,\n  Avatar,\n  Badge,\n  Typography,\n} from '@material-ui/core';\nimport {\n  Folder as FolderIcon,\n  Person as PersonIcon,\n} from '@material-ui/icons';\n\nimport { listTabs, handleTabChange } from '../Tabs';\nimport { getToken } from '../../services/tokenService';\nimport Header from '../Header';\nimport Page from '../Page';\n\nconst styles = (theme) => ({\n  root: {},\n  margin: {\n    margin: theme.spacing.unit * 2,\n  },\n  inline: {\n    display: 'inline',\n  },\n});\n\nclass Cohort extends PureComponent {\n  handleClickStudent = async (studentId) => {\n    console.group('Cohort::handleClickStudent');\n    console.log('studentId:', studentId);\n    console.groupEnd();\n    const { history } = this.props;\n    const cohortId = get(this.props, 'match.params.cohortId');\n    return history.push({ pathname: `/cohorts/${cohortId}/students/${studentId}` });\n  }\n\n  handleFetchStudents = async () => {\n    console.group('Cohort::handleFetchStudent');\n    try {\n      const token = getToken();\n      const cohortId = get(this.props, 'match.params.cohortId');\n      const response = await fetch(`/api/cohorts/${cohortId}/students`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n      const responseData = await response.json();\n      const students = get(responseData, 'data[0].students');\n      console.log('students:', students);\n      this.props.onFetchStudents(cohortId, students);\n      console.groupEnd();\n    } catch (e) {\n      console.error(e);\n      console.groupEnd();\n    }\n  }\n\n  renderHeader = (props) => (\n    <Header\n      currentView={false}\n      handleTabChange={handleTabChange}\n      appState={{\n        cohort: this.props.cohortsById[get(this.props, 'match.params.cohortId')] || {},\n      }}\n      tabs={listTabs([\n        'cohorts.view',\n        'cohorts.edit',\n        'students.create',\n      ])}\n      {...props}\n    />\n  )\n\n  componentDidMount () {\n    console.group('Cohorts::componentDidMount');\n    this.handleFetchStudents();\n    console.groupEnd();\n  }\n\n  render () {\n    const { classes, students } = this.props;\n    return (\n      <>\n        {this.renderHeader(this.props)}\n        <Page title='Cohort Students'>\n          <List>\n            {\n              students.map((student) => {\n                return (\n                  <ListItem\n                    button\n                    key={`${student._id}`}\n                    onClick={(event) => {\n                      this.handleClickStudent(student._id);\n                    }}\n                  >\n                    <ListItemAvatar>\n                      <Avatar>\n                        <PersonIcon />\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      disableTypography\n                      primary={\n                        <Typography variant='h4'>\n                          {`${student.firstName}`}\n                        </Typography>\n                      }\n                      secondary={\n                        <React.Fragment>\n                          <Typography component='span' className={classes.inline}>\n                            {`${student.firstName}`}\n                          </Typography>\n                          {` - ${student.lastName}`}\n                        </React.Fragment>\n                      }\n                    />\n                    <ListItemSecondaryAction>\n                      <Badge\n                        className={classes.margin}\n                        badgeContent={student.projects.length}\n                        color='secondary'\n                      >\n                        <FolderIcon />\n                      </Badge>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                );\n              })\n            }\n          </List>\n        </Page>\n      </>\n    );\n  }\n}\n\nCohort.propTypes = {\n  classes: PropTypes.object,\n  students: PropTypes.arrayOf(PropTypes.object),\n  cohortsById: PropTypes.object,\n  onFetchStudents: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default withStyles(styles)(Cohort);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { get } from 'lodash';\n\nimport {\n  Button,\n  TextField,\n} from '@material-ui/core';\n\nimport { listTabs, handleTabChange } from '../Tabs';\nimport { getToken } from '../../services/tokenService';\nimport Header from '../Header';\nimport Page from '../Page';\n\nconst styles = (theme) => ({\n  root: {},\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nclass EditStudent extends PureComponent {\n  constructor (props) {\n    super(props);\n    const student = get(props, 'location.state.student', {\n      firstName: '',\n      lastName: '',\n    });\n\n    this.state = {\n      student,\n    };\n  }\n\n  submit = async () => {\n    try {\n      const { history } = this.props;\n      const { student } = this.state;\n      const token = getToken();\n      const cohortId = get(this.props, 'match.params.cohortId');\n      const response = await fetch(`/api/students/${student._id}`, {\n        method: 'PUT',\n        body: JSON.stringify(student),\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json',\n        },\n      });\n      const students = await response.json();\n      console.log('students:', students);\n      await this.props.onFetchStudents(cohortId, students.data);\n      return history.push({ pathname: `/cohorts/${cohortId}` });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  handleInputChange = (prop) => ({ target: { id, value } }) => {\n    const currentStudent = this.state.student;\n    const nextStudent = { [prop]: value };\n    this.setState({\n      student: Object.assign({}, currentStudent, nextStudent),\n    });\n  };\n\n  renderHeader = (props) => (\n    <Header\n      currentView={false}\n      handleTabChange={handleTabChange}\n      tabs={listTabs([\n        'students.view',\n      ])}\n      {...props}\n    />\n  )\n\n  render () {\n    const { classes } = this.props;\n    return (\n      <>\n        {this.renderHeader(this.props)}\n        <Page title='Edit Student'>\n          <form className={classes.container}>\n            <TextField\n              fullWidth\n              id='firstName'\n              label='First Name'\n              className={classes.textField}\n              value={this.state.student.firstName}\n              onChange={this.handleInputChange('firstName')}\n            />\n            <TextField\n              fullWidth\n              id='lastName'\n              label='Last Name'\n              className={classes.textField}\n              value={this.state.student.lastName}\n              onChange={this.handleInputChange('lastName')}\n            />\n            <Button\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              // onClick={this.submit}\n            >\n              Edit Cohort\n            </Button>\n          </form>\n        </Page>\n      </>\n    );\n  }\n}\n\nEditStudent.propTypes = {\n  classes: PropTypes.object,\n  history: PropTypes.object,\n  onFetchStudents: PropTypes.func,\n};\n\nexport default withStyles(styles)(EditStudent);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { get } from 'lodash';\n\nimport { listTabs, handleTabChange } from '../Tabs';\nimport Header from '../Header';\nimport Page from '../Page';\n\nconst styles = (theme) => ({\n  root: {},\n});\n\nclass Student extends PureComponent {\n  renderHeader = (props) => (\n    <Header\n      currentView={false}\n      handleTabChange={handleTabChange}\n      appState={{\n        student: this.props.studentsById[get(this.props, 'match.params.studentId')] || {},\n      }}\n      tabs={listTabs([\n        'students.view',\n        'students.edit',\n        'projects.create',\n      ])}\n      {...props}\n    />\n  );\n\n  render () {\n    const { classes } = this.props;\n    return (\n      <>\n        {this.renderHeader(this.props)}\n        <Page title='Student' className={classes.root}>\n          <div />\n        </Page>\n      </>\n    );\n  }\n}\n\nStudent.propTypes = {\n  classes: PropTypes.object,\n  student: PropTypes.object,\n  studentsById: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default withStyles(styles)(Student);\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport { debounce } from 'lodash';\nimport {\n  Avatar,\n  Button,\n  FormControl,\n  FormControlLabel,\n  Checkbox,\n  Input,\n  InputLabel,\n  Paper,\n  Typography,\n  IconButton,\n  Snackbar,\n  SnackbarContent,\n} from '@material-ui/core';\nimport {\n  LockOutlined as LockOutlinedIcon,\n  Error as ErrorIcon,\n  Close as CloseIcon,\n} from '@material-ui/icons';\n\nimport { setToken } from '../services/tokenService';\n\nconst styles = (theme) => ({\n  root: {},\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    [theme.breakpoints.up(400 + theme.spacing.unit * 3 * 2)]: {\n      width: 400,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing.unit * 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 3}px ${theme.spacing.unit * 3}px`,\n  },\n  avatar: {\n    margin: theme.spacing.unit,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing.unit,\n  },\n  submit: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  snackError: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  snackIcon: {\n    fontSize: 20,\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  snackMessage: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nclass Login extends PureComponent {\n  constructor (props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      error: {},\n    };\n\n    this.debounceChange = debounce(this.handleInputChange, 300);\n  }\n\n  submit = async () => {\n    try {\n      const { email, password } = this.state;\n      const loginResponse = await fetch('/api/users/login', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      console.log('loginResponse:', loginResponse);\n      const { ok, status, statusText } = loginResponse;\n      if (ok) {\n        const { data } = await loginResponse.json();\n        const [ tokenData ] = data;\n        const { token } = tokenData;\n        setToken(token);\n        this.props.fetchUser();\n      } else {\n        this.setState({\n          error: {\n            status,\n            message: statusText,\n          },\n        });\n      }\n    } catch (e) {\n      console.error('error:', e);\n    }\n  }\n\n  handleClose = () => {\n    this.setState({\n      error: {},\n    });\n  }\n\n  handleInputChange = (id, value) => {\n    this.setState({ [id]: value });\n  }\n\n  componentDidMount () {\n    console.group('Login::componentDidMount');\n    console.groupEnd();\n  }\n\n  render () {\n    const { classes } = this.props;\n    const { error } = this.state;\n    return (\n      <main className={classes.main}>\n        <Paper className={classes.paper}>\n          <Snackbar\n            anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n            open={!!Object.keys(error).length}\n            onClose={this.handleClose}\n            ContentProps={{ 'aria-describedby': 'message-id' }}\n            autoHideDuration={6000}\n          >\n            <SnackbarContent\n              className={classes.snackError}\n              aria-describedby='client-snackbar'\n              message={\n                <span id='client-snackbar' className={classes.snackMessage}>\n                  <ErrorIcon\n                    className={classes.snackIcon}\n                  />\n                  {error.message || ''}\n                </span>\n              }\n              action={[\n                <IconButton\n                  key='close'\n                  aria-label='Close'\n                  color='inherit'\n                  onClick={this.handleClose}\n                >\n                  <CloseIcon className={classes.icon} />\n                </IconButton>,\n              ]}\n            />\n          </Snackbar>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component='h1' variant='h5'>\n            Sign in\n          </Typography>\n          <form className={classes.form}>\n            <FormControl margin='normal' required fullWidth>\n              <InputLabel htmlFor='email'>Email Address</InputLabel>\n              <Input\n                autoFocus\n                id='email'\n                name='email'\n                type='email'\n                autoComplete='email'\n                onChange={({ target: { id, value } }) => {\n                  this.debounceChange(id, value);\n                }}\n              />\n            </FormControl>\n            <FormControl margin='normal' required fullWidth>\n              <InputLabel htmlFor='password'>Password</InputLabel>\n              <Input\n                id='password'\n                name='password'\n                type='password'\n                autoComplete='current-password'\n                onChange={({ target: { id, value } }) => {\n                  this.debounceChange(id, value);\n                }}\n              />\n            </FormControl>\n            <FormControlLabel\n              control={<Checkbox value='remember' color='primary' />}\n              label='Remember me'\n            />\n            <Button\n              fullWidth\n              variant='contained'\n              color='primary'\n              className={classes.submit}\n              onClick={this.submit}\n            >\n              Sign in\n            </Button>\n          </form>\n        </Paper>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object,\n  fetchUser: PropTypes.func,\n};\n\nexport default withStyles(styles)(Login);\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport { get, uniqBy } from 'lodash';\n\nimport { getToken } from '../services/tokenService';\n\nimport CreateCohort from './cohort/CreateCohort';\nimport EditCohort from './cohort/EditCohort';\nimport Cohorts from './cohort/Cohorts';\nimport Cohort from './cohort/Cohort';\nimport EditStudent from './student/EditStudent';\nimport Student from './student/Student';\nimport Login from './Login';\n\nclass App extends Component {\n  state = {\n    user: null,\n    cohorts: [],\n    cohortsById: {},\n    students: [],\n    studentsById: {},\n    studentsByCohortId: {},\n    // projects: [],\n    // projectsById: {},\n    // projectsByStudentId: {},\n  };\n\n  fetchUser = async () => {\n    console.group('App::fetchUser');\n    const token = getToken();\n    console.log('localStorage::token:', token);\n    console.groupEnd();\n    if (token) {\n      try {\n        const response = await fetch('/api/users/me', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n        const { data } = await response.json();\n        const [ user ] = data;\n        this.setState({ user });\n      } catch (e) {\n        console.error('error:', e);\n      }\n    }\n  }\n\n  onFetchCohorts = (cohorts) => {\n    console.group('App::onFetchCohorts');\n    console.log('cohorts:', cohorts);\n    const cohortsById = cohorts.reduce((acc, cohort) => {\n      const { _id } = cohort;\n      return Object.assign({}, acc, { [_id]: cohort });\n    }, {});\n\n    const currentCohorts = this.state.cohorts;\n    const nextCohorts = uniqBy([...cohorts, ...currentCohorts], '_id');\n\n    const currentCohortsById = this.state.cohortsById;\n    const nextCohortsById = Object.assign({}, currentCohortsById, cohortsById);\n\n    console.groupEnd();\n    this.setState({\n      cohorts: nextCohorts,\n      cohortsById: nextCohortsById,\n    });\n  }\n\n  onFetchStudents = (cohortId, students) => {\n    const studentsById = students.reduce((acc, student) => {\n      const { _id } = student;\n      return Object.assign({}, acc, { [_id]: student });\n    }, {});\n\n    const currentStudents = this.state.students;\n    const nextStudents = uniqBy([...students, ...currentStudents], '_id');\n\n    const currentStudentsById = this.state.studentsById;\n    const nextStudentsById = Object.assign({}, currentStudentsById, studentsById);\n\n    // const currentStudentsByCohortId = this.state.studentsByCohortId[cohortId] || {};\n    const studentsByCohortId = { [cohortId]: students };\n    // const nextStudentsByCohortId = uniqBy([...currentStudentsByCohortId ]);\n\n    this.setState({\n      students: nextStudents,\n      studentsById: nextStudentsById,\n      studentsByCohortId,\n    });\n  }\n\n  componentDidMount () {\n    console.group('App::componentDidMount');\n    this.fetchUser();\n    console.groupEnd();\n  }\n\n  render () {\n    return (\n      <Router>\n        <Switch>\n          <Route\n            exact path='/'\n            render={(renderProps) => (\n              (this.state.user)\n                ? (<Redirect to='/cohorts' />)\n                : (<Redirect to='/login' />)\n            )}\n          />\n          <Route\n            exact path='/login'\n            render={(renderProps) => (\n              (this.state.user)\n                ? (<Redirect to='/cohorts' />)\n                : (<Login fetchUser={this.fetchUser} />)\n            )}\n          />\n          <Route\n            exact path='/cohorts'\n            render={(renderProps) => (\n              (!this.state.user)\n                ? (<Redirect to='/login' />)\n                : (\n                  <Cohorts\n                    {...renderProps}\n                    cohorts={this.state.cohorts}\n                    onFetchCohorts={this.onFetchCohorts}\n                  />\n                )\n            )}\n          />\n          <Route\n            exact path='/cohorts/create'\n            render={(renderProps) => (\n              (!this.state.user)\n                ? (<Redirect to='/login' />)\n                : (\n                  <CreateCohort\n                    {...renderProps}\n                  />\n                )\n            )}\n          />\n          <Route\n            exact path='/cohorts/:cohortId'\n            render={(renderProps) => {\n              const cohortId = get(renderProps, 'match.params.cohortId');\n              const cohortStudents = this.state.studentsByCohortId[cohortId] || [];\n              return (!this.state.user)\n                ? (<Redirect to='/login' />)\n                : (\n                  <Cohort\n                    {...renderProps}\n                    students={cohortStudents}\n                    cohortsById={this.state.cohortsById}\n                    onFetchStudents={this.onFetchStudents}\n                  />\n                );\n            }}\n          />\n          <Route\n            exact path='/cohorts/:cohortId/edit'\n            render={(renderProps) => {\n              // const cohortId = get(renderProps, 'match.params.cohortId');\n              // const cohortStudents = this.state.studentsByCohortId[cohortId] || [];\n              return (!this.state.user)\n                ? (<Redirect to='/login' />)\n                : (\n                  <EditCohort\n                    {...renderProps}\n                    onFetchCohorts={this.onFetchCohorts}\n                  />\n                );\n            }}\n          />\n          <Route\n            exact path='/cohorts/:cohortId/students/:studentId/edit'\n            render={(renderProps) => {\n              return (!this.state.user)\n                ? (<Redirect to='/login' />)\n                : (\n                  <EditStudent\n                    {...renderProps}\n                    onFetchStudents={this.onFetchStudents}\n                  />\n                );\n            }}\n          />\n          <Route\n            exact path='/cohorts/:cohortId/students/:studentId'\n            render={(renderProps) => {\n              const studentId = get(renderProps, 'match.params.studentId');\n              const student = this.state.studentsById[studentId];\n              return (!this.state.user)\n                ? (<Redirect to='/login' />)\n                : (!student)\n                  ? (<Redirect to='/cohorts' />)\n                  : (\n                    <Student\n                      {...renderProps}\n                      student={student}\n                      studentsById={this.state.studentsById}\n                    />\n                  );\n            }}\n          />\n          <Route render={() => (<Redirect to='/' />)} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}